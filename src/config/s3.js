// ============================================
// FOX TAFFY - SUPABASE STORAGE CONFIGURATION
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
// ============================================

import { supabase } from '@/config/supabase.js'

const BUCKET_NAME = 'gallery' // –ù–∞–∑–≤–∞–Ω–∏–µ bucket –≤ Supabase Storage

// ============================================
// SUPABASE STORAGE API –ú–ï–¢–û–î–´
// ============================================
export const s3Api = {
  
  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ –≤ Supabase Storage
   * @param {File} file - –§–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
   * @param {string} folder - –ü–∞–ø–∫–∞ –≤ bucket (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'arts', 'avatars')
   * @param {Function} onProgress - Callback –¥–ª—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
   * @returns {Promise<string>} URL –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
   */
  async uploadFile(file, folder = 'arts', onProgress = null) {
    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
      const fileExtension = file.name.split('.').pop().toLowerCase()
      const timestamp = Date.now()
      const randomString = Math.random().toString(36).substring(2, 15)
      const fileName = `${folder}/${timestamp}_${randomString}.${fileExtension}`
      
      console.log('üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage:', fileName)
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–º–∞–∫—Å–∏–º—É–º 10MB)
      const maxSize = 10 * 1024 * 1024 // 10MB
      if (file.size > maxSize) {
        throw new Error(`–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä: ${Math.round(maxSize / 1024 / 1024)}MB`)
      }
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
      const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp']
      if (!allowedTypes.includes(file.type)) {
        throw new Error('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPG, PNG, GIF, WebP')
      }
      
      // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –¥–ª—è UI
      if (onProgress) {
        onProgress(10) // –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏
      }
      
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ bucket –∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
      await this.ensureBucketAndPolicies()
      
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ Supabase Storage
      const { data, error } = await supabase.storage
        .from(BUCKET_NAME)
        .upload(fileName, file, {
          cacheControl: '3600',
          upsert: false,
          contentType: file.type
        })
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage:', error)
        
        // ‚úÖ –°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–∫–∏ RLS
        if (error.message.includes('row-level security policy') || error.message.includes('RLS')) {
          throw new Error('–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ Supabase. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Storage –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.')
        }
        
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`)
      }
      
      // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      if (onProgress) {
        onProgress(70)
      }
      
      // –ü–æ–ª—É—á–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL
      const { data: urlData } = supabase.storage
        .from(BUCKET_NAME)
        .getPublicUrl(fileName)
      
      const publicUrl = urlData.publicUrl
      
      // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
      if (onProgress) {
        onProgress(100)
      }
      
      console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –≤ Supabase Storage:', publicUrl)
      
      return {
        url: publicUrl,
        fileName: fileName,
        size: file.size,
        type: file.type,
        path: data.path
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≤ Supabase Storage:', error)
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${error.message}`)
    }
  },
  
  /**
   * ‚úÖ –ù–û–í–´–ô –ú–ï–¢–û–î: –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ bucket –∏ –ø–æ–ª–∏—Ç–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ
   */
  async ensureBucketAndPolicies() {
    try {
      console.log('üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ bucket –∏ –ø–æ–ª–∏—Ç–∏–∫...')
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ bucket
      const bucketExists = await this.checkBucketExists()
      
      if (!bucketExists) {
        console.log('ü™£ –°–æ–∑–¥–∞–µ–º bucket...')
        await this.createBucketWithPolicies()
      } else {
        console.log('‚úÖ Bucket —Å—É—â–µ—Å—Ç–≤—É–µ—Ç')
      }
      
      return true
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ bucket:', error)
      return false
    }
  },
  
  /**
   * ‚úÖ –ù–û–í–´–ô –ú–ï–¢–û–î: –°–æ–∑–¥–∞–Ω–∏–µ bucket —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏
   */
  async createBucketWithPolicies() {
    try {
      console.log('ü™£ –°–æ–∑–¥–∞–µ–º bucket —Å –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏...')
      
      // –°–æ–∑–¥–∞–µ–º –ø—É–±–ª–∏—á–Ω—ã–π bucket
      const { data, error } = await supabase.storage.createBucket(BUCKET_NAME, {
        public: true,
        allowedMimeTypes: ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'],
        fileSizeLimit: 10485760 // 10MB
      })
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è bucket:', error)
        return false
      }
      
      console.log('‚úÖ Bucket —Å–æ–∑–¥–∞–Ω:', data)
      
      // ‚úÖ –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ SQL
      try {
        await this.createStoragePolicies()
      } catch (policyError) {
        console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏:', policyError)
        console.log('üí° –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–ª–∏—Ç–∏–∫–∏ –≤—Ä—É—á–Ω—É—é –≤ Supabase Dashboard')
      }
      
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è bucket:', error)
      return false
    }
  },
  
  /**
   * ‚úÖ –ù–û–í–´–ô –ú–ï–¢–û–î: –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª–∏—Ç–∏–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ Storage
   */
  async createStoragePolicies() {
    try {
      console.log('üîê –°–æ–∑–¥–∞–µ–º –ø–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ Storage...')
      
      // –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —á—Ç–µ–Ω–∏—è (–ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
      const readPolicy = `
        CREATE POLICY "Public read access" ON storage.objects
        FOR SELECT USING (bucket_id = '${BUCKET_NAME}');
      `
      
      // –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –∑–∞–ø–∏—Å–∏ (–∞–Ω–æ–Ω–∏–º–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
      const writePolicy = `
        CREATE POLICY "Public write access" ON storage.objects
        FOR INSERT WITH CHECK (bucket_id = '${BUCKET_NAME}');
      `
      
      // –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
      const deletePolicy = `
        CREATE POLICY "Public delete access" ON storage.objects
        FOR DELETE USING (bucket_id = '${BUCKET_NAME}');
      `
      
      // –í—ã–ø–æ–ª–Ω—è–µ–º SQL –∑–∞–ø—Ä–æ—Å—ã
      await supabase.rpc('exec_sql', { sql: readPolicy })
      await supabase.rpc('exec_sql', { sql: writePolicy })
      await supabase.rpc('exec_sql', { sql: deletePolicy })
      
      console.log('‚úÖ –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —Å–æ–∑–¥–∞–Ω—ã')
      return true
    } catch (error) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–∏—Ç–∏–∫:', error)
      return false
    }
  },
  
  /**
   * –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –∏–∑ Supabase Storage
   * @param {string} fileName - –ò–º—è —Ñ–∞–π–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
   * @returns {Promise<boolean>} –£—Å–ø–µ—à–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–∏—è
   */
  async deleteFile(fileName) {
    try {
      console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –∏–∑ Supabase Storage:', fileName)
      
      const { data, error } = await supabase.storage
        .from(BUCKET_NAME)
        .remove([fileName])
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Supabase Storage:', error)
        throw new Error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`)
      }
      
      console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ Supabase Storage')
      return true
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Supabase Storage:', error)
      throw new Error(`–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ${error.message}`)
    }
  },
  
  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é
   * @param {File} file - –§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
   * @param {string} folder - –ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   * @param {Function} onProgress - Callback –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
   * @returns {Promise<Object>} –û–±—ä–µ–∫—Ç —Å URL –æ—Ä–∏–≥–∏–Ω–∞–ª–∞ –∏ –ø—Ä–µ–≤—å—é
   */
  async uploadImageWithThumbnail(file, folder = 'arts', onProgress = null) {
    try {
      // ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –°–Ω–∞—á–∞–ª–∞ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –æ—Ä–∏–≥–∏–Ω–∞–ª, –ø—Ä–µ–≤—å—é –æ—Ç–∫–ª—é—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ
      console.log('üì§ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...')
      
      const originalResult = await this.uploadFile(file, folder, onProgress)
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –±–µ–∑ –ø—Ä–µ–≤—å—é –ø–æ–∫–∞ –Ω–µ —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É —Å RLS
      return {
        original: originalResult,
        thumbnail: originalResult // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –∫–∞–∫ –ø—Ä–µ–≤—å—é –≤—Ä–µ–º–µ–Ω–Ω–æ
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', error)
      throw error
    }
  },
  
  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ)
   * @param {File} file - –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª
   * @param {string} folder - –ü–∞–ø–∫–∞ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è
   * @param {Function} onProgress - Callback –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
   * @returns {Promise<Object>} –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–µ–≤—å—é
   */
  async createThumbnail(file, folder = 'arts', onProgress = null) {
    // ‚úÖ –í—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º —Å RLS
    console.log('‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–≤—å—é –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ –∏–∑-–∑–∞ –ø–æ–ª–∏—Ç–∏–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏')
    
    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
    return {
      url: '',
      fileName: '',
      size: 0,
      type: file.type,
      path: ''
    }
  },
  
  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–∞ –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π
   * @param {File} file - –§–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
   * @returns {Object} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
   */
  validateFile(file) {
    const errors = []
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–∞
    const maxSize = 10 * 1024 * 1024 // 10MB
    if (file.size > maxSize) {
      errors.push(`–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π. –ú–∞–∫—Å–∏–º—É–º: ${Math.round(maxSize / 1024 / 1024)}MB`)
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–∞
    const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp']
    if (!allowedTypes.includes(file.type)) {
      errors.push('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç. –†–∞–∑—Ä–µ—à–µ–Ω—ã: JPG, PNG, GIF, WebP')
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    if (!file.name || file.name.length === 0) {
      errors.push('–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–º—è —Ñ–∞–π–ª–∞')
    }
    
    return {
      isValid: errors.length === 0,
      errors: errors
    }
  },
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∞–π–ª–µ
   * @param {File} file - –§–∞–π–ª –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
   * @returns {Promise<Object>} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ
   */
  async getFileInfo(file) {
    return new Promise((resolve) => {
      if (file.type.startsWith('image/')) {
        const img = new Image()
        img.onload = () => {
          resolve({
            name: file.name,
            size: file.size,
            type: file.type,
            width: img.width,
            height: img.height,
            aspectRatio: img.width / img.height
          })
        }
        img.onerror = () => {
          resolve({
            name: file.name,
            size: file.size,
            type: file.type,
            width: null,
            height: null,
            aspectRatio: null
          })
        }
        img.src = URL.createObjectURL(file)
      } else {
        resolve({
          name: file.name,
          size: file.size,
          type: file.type,
          width: null,
          height: null,
          aspectRatio: null
        })
      }
    })
  },
  
  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è bucket
   * @returns {Promise<boolean>} –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ bucket
   */
  async checkBucketExists() {
    try {
      const { data, error } = await supabase.storage.listBuckets()
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ bucket:', error)
        return false
      }
      
      const bucketExists = data.some(bucket => bucket.name === BUCKET_NAME)
      console.log(`ü™£ Bucket "${BUCKET_NAME}" ${bucketExists ? '—Å—É—â–µ—Å—Ç–≤—É–µ—Ç' : '–Ω–µ –Ω–∞–π–¥–µ–Ω'}`)
      
      return bucketExists
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ bucket:', error)
      return false
    }
  },
  
  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ bucket (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
   * @returns {Promise<boolean>} –£—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è
   */
  async createBucketIfNotExists() {
    try {
      const bucketExists = await this.checkBucketExists()
      
      if (!bucketExists) {
        return await this.createBucketWithPolicies()
      }
      
      return true
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è bucket:', error)
      return false
    }
  },
  
  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
   * @param {string} folder - –ü–∞–ø–∫–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
   * @returns {Promise<Array>} –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
   */
  async listFiles(folder = '') {
    try {
      const { data, error } = await supabase.storage
        .from(BUCKET_NAME)
        .list(folder)
      
      if (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error)
        return []
      }
      
      return data || []
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤:', error)
      return []
    }
  }
}

// ============================================
// ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü–†–ê–í–ò–õ–¨–ù–´–ï –≠–ö–°–ü–û–†–¢–´
// ============================================

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–∞–π–ª–∞
 * @param {number} bytes - –†–∞–∑–º–µ—Ä –≤ –±–∞–π—Ç–∞—Ö
 * @returns {string} –ß–∏—Ç–∞–µ–º—ã–π —Ä–∞–∑–º–µ—Ä
 */
export const formatFileSize = (bytes) => {
  if (bytes === 0) return '0 Bytes'
  
  const k = 1024
  const sizes = ['Bytes', 'KB', 'MB', 'GB']
  const i = Math.floor(Math.log(bytes) / Math.log(k))
  
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i]
}

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –±—Ä–∞—É–∑–µ—Ä–æ–º File API
 * @returns {boolean} –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ File API
 */
export const isFileApiSupported = () => {
  return !!(window.File && window.FileReader && window.FileList && window.Blob)
}

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase Storage
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —Å–æ–∑–¥–∞–µ—Ç bucket –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
 */
export const initializeStorage = async () => {
  try {
    console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Supabase Storage...')
    
    const bucketReady = await s3Api.createBucketIfNotExists()
    
    if (bucketReady) {
      console.log('‚úÖ Supabase Storage –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')
      return true
    } else {
      console.warn('‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π Supabase Storage')
      return false
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Supabase Storage:', error)
    return false
  }
}

// ============================================
// ‚úÖ –î–ï–§–û–õ–¢–ù–´–ô –≠–ö–°–ü–û–†–¢
// ============================================
export default s3Api

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
if (typeof window !== 'undefined') {
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ
  initializeStorage().then(success => {
    if (success) {
      console.log('‚úÖ Supabase Storage Configuration –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –≥–æ—Ç–æ–≤!')
      console.log('üîß Endpoint: Supabase Storage API')
      console.log('üìÅ Bucket:', BUCKET_NAME)
      console.log('üì§ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 10MB')
      console.log('üñºÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: JPG, PNG, GIF, WebP')
      console.log('üîê –ü–æ–ª–∏—Ç–∏–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞')
    } else {
      console.warn('‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª–∏—Ç–∏–∫ –≤ Supabase Dashboard')
    }
  })
}

console.log('‚úÖ Supabase Storage API —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π RLS –∑–∞–≥—Ä—É–∂–µ–Ω!')